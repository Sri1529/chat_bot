services:
  # VoiceBot Backend with Redis
  voicebot:
    build:
      context: ./backend-new
      dockerfile: Dockerfile.with-redis
    container_name: voicebot-app
    ports:
      - "3001:3001"
      - "6379:6379"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_URL=redis://localhost:6379/0
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=us-east-1-aws
      - PINECONE_INDEX_NAME=voicebot-index
      - PINECONE_DIMENSION=1024
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=gemini-1.5-flash
      - GEMINI_MAX_TOKENS=1000
      - GEMINI_TEMPERATURE=0.7
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - RAG_TOP_K=5
      - RAG_CHUNK_SIZE=1000
      - RAG_CHUNK_OVERLAP=200
      - SESSION_TTL=3600
      - SESSION_MAX_MESSAGES=100
      - NEWS_MAX_ARTICLES=50
      - NEWS_UPDATE_INTERVAL=3600000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Optional - if you want to run frontend too)
  frontend:
    build:
      context: ./frontend-new
      dockerfile: Dockerfile
    container_name: voicebot-frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
    depends_on:
      - voicebot
    restart: unless-stopped