{"ast":null,"code":"var _jsxFileName = \"/Users/agmac20/Downloads/voicebot-main/frontend-new/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Mic, MicOff, Send, Volume2, VolumeX, Bot, RotateCcw } from 'lucide-react';\nimport MessageList from './components/MessageList';\nimport useChat from './hooks/useChat';\nimport useTextToSpeech from './hooks/useTextToSpeech';\nimport useAudioRecorder from './hooks/useAudioRecorder';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Generate time-appropriate greeting\n  const getTimeGreeting = () => {\n    const hour = new Date().getHours();\n    if (hour < 12) return 'Good morning';\n    if (hour < 17) return 'Good afternoon';\n    return 'Good evening';\n  };\n  const [messages, setMessages] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [inputText, setInputText] = useState('');\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [streamingText, setStreamingText] = useState('');\n  const messagesEndRef = useRef(null);\n  const {\n    speak,\n    stopSpeaking,\n    isSpeaking\n  } = useTextToSpeech();\n  const {\n    startRecording: startAudioRecording,\n    stopRecording: stopAudioRecording,\n    isRecording: isAudioRecording,\n    audioBlob,\n    error: audioError,\n    clearAudio\n  } = useAudioRecorder();\n  const {\n    sendMessage,\n    sendStreamingMessage,\n    getChatHistory,\n    clearChatHistory,\n    resetSession,\n    sessionId,\n    chatHistory,\n    isLoading,\n    error: chatError\n  } = useChat();\n\n  // Determine which recording mode we're in\n  const isVoiceMode = isAudioRecording;\n  const isProcessing = isLoading || isStreaming;\n\n  // Scroll to bottom when new messages arrive\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages, streamingText]);\n\n  // Load chat history when session is available\n  useEffect(() => {\n    if (sessionId) {\n      loadChatHistory();\n    }\n  }, [sessionId]);\n  const loadChatHistory = async () => {\n    try {\n      const history = await getChatHistory();\n      if (history && history.length > 0) {\n        const formattedMessages = history.map(msg => ({\n          id: msg.id,\n          text: msg.text,\n          sender: msg.sender,\n          timestamp: new Date(msg.timestamp),\n          isVoice: false\n        }));\n        setMessages(formattedMessages);\n      }\n    } catch (error) {\n      console.error('Failed to load chat history:', error);\n    }\n  };\n  const handleVoiceToggle = () => {\n    if (isVoiceMode) {\n      stopAudioRecording();\n    } else {\n      setInputText(''); // Clear input when starting recording\n      startAudioRecording();\n    }\n  };\n  const handleMuteToggle = () => {\n    if (isSpeaking) {\n      stopSpeaking();\n    }\n    setIsMuted(!isMuted);\n  };\n  const handleResetChat = async () => {\n    try {\n      if (sessionId) {\n        await clearChatHistory();\n      }\n      resetSession();\n      setMessages([{\n        id: 'welcome',\n        text: `Hello! ${getTimeGreeting()}! I'm your AI assistant powered by news and current events. How can I help you today?`,\n        sender: 'bot',\n        timestamp: new Date(),\n        isVoice: false\n      }]);\n    } catch (error) {\n      console.error('Failed to reset chat:', error);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!inputText.trim() || isProcessing) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      text: inputText.trim(),\n      sender: 'user',\n      timestamp: new Date(),\n      isVoice: false\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const messageText = inputText.trim();\n    setInputText('');\n    try {\n      setIsTyping(true);\n      setIsStreaming(true);\n      setStreamingText('');\n\n      // Use streaming for better UX\n      await sendStreamingMessage(messageText,\n      // onChunk\n      chunk => {\n        setStreamingText(prev => prev + chunk);\n      },\n      // onComplete\n      completedSessionId => {\n        const botMessage = {\n          id: (Date.now() + 1).toString(),\n          text: streamingText,\n          sender: 'bot',\n          timestamp: new Date(),\n          isVoice: false\n        };\n        setMessages(prev => [...prev, botMessage]);\n        setStreamingText('');\n        setIsStreaming(false);\n        setIsTyping(false);\n\n        // Speak the response if not muted\n        if (!isMuted && streamingText) {\n          speak(streamingText);\n        }\n      },\n      // onError\n      error => {\n        console.error('Streaming error:', error);\n        const errorMessage = {\n          id: (Date.now() + 1).toString(),\n          text: `Error: ${error}`,\n          sender: 'bot',\n          timestamp: new Date(),\n          isVoice: false\n        };\n        setMessages(prev => [...prev, errorMessage]);\n        setIsStreaming(false);\n        setIsTyping(false);\n        setStreamingText('');\n      });\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage = {\n        id: (Date.now() + 1).toString(),\n        text: `Error: ${chatError || 'Failed to send message'}`,\n        sender: 'bot',\n        timestamp: new Date(),\n        isVoice: false\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      setIsStreaming(false);\n      setIsTyping(false);\n      setStreamingText('');\n    }\n  };\n\n  // Handle sending voice message when audio is ready\n  useEffect(() => {\n    if (audioBlob && !isAudioRecording) {\n      handleSendVoiceMessage(audioBlob);\n    }\n  }, [audioBlob, isAudioRecording]);\n  const handleSendVoiceMessage = async audioBlob => {\n    try {\n      // For now, we'll just send a placeholder message\n      // In a real implementation, you'd transcribe the audio first\n      const userMessage = {\n        id: Date.now().toString(),\n        text: 'Voice message (transcription not implemented)',\n        sender: 'user',\n        timestamp: new Date(),\n        isVoice: true\n      };\n      setMessages(prev => [...prev, userMessage]);\n      clearAudio();\n\n      // Send a text message instead\n      await handleSendMessage();\n    } catch (error) {\n      console.error('Error sending voice message:', error);\n      clearAudio();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-t-2xl shadow-lg p-6 border-b\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(Bot, {\n                className: \"w-6 h-6 text-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-2xl font-bold text-gray-800\",\n                children: \"AI News Assistant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 rounded-full bg-green-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: sessionId ? `Session: ${sessionId.slice(0, 8)}...` : 'Ready'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleResetChat,\n              className: \"p-2 rounded-full bg-gray-100 text-gray-600 hover:bg-gray-200 transition-colors\",\n              title: \"Reset Chat\",\n              children: /*#__PURE__*/_jsxDEV(RotateCcw, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleMuteToggle,\n              className: `p-2 rounded-full transition-colors ${isMuted ? 'bg-red-100 text-red-600' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'}`,\n              title: isMuted ? 'Unmute' : 'Mute',\n              children: isMuted ? /*#__PURE__*/_jsxDEV(VolumeX, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 28\n              }, this) : /*#__PURE__*/_jsxDEV(Volume2, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-b-2xl shadow-lg h-96 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-6\",\n          children: [/*#__PURE__*/_jsxDEV(MessageList, {\n            messages: messages,\n            isTyping: isTyping,\n            streamingText: streamingText,\n            isStreaming: isStreaming\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-t p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleVoiceToggle,\n              className: `p-4 rounded-full transition-all duration-200 ${isVoiceMode ? 'bg-red-500 text-white animate-pulse shadow-lg' : 'bg-blue-500 text-white hover:bg-blue-600 shadow-md'}`,\n              disabled: isProcessing,\n              title: \"Voice Recording\",\n              children: isVoiceMode ? /*#__PURE__*/_jsxDEV(MicOff, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 32\n              }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: inputText,\n                onChange: e => setInputText(e.target.value),\n                placeholder: isVoiceMode ? \"Recording... Click mic to stop\" : isProcessing ? \"Processing...\" : \"Ask me about current news and events...\",\n                className: \"w-full px-4 py-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                onKeyPress: e => {\n                  if (e.key === 'Enter' && !isProcessing) {\n                    handleSendMessage();\n                  }\n                },\n                disabled: isVoiceMode || isProcessing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `p-3 rounded-full transition-colors disabled:opacity-50 ${isVoiceMode ? 'bg-red-500 text-white hover:bg-red-600' : 'bg-blue-500 text-white hover:bg-blue-600'}`,\n              disabled: !inputText.trim() || isProcessing,\n              onClick: handleSendMessage,\n              title: \"Send message\",\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 text-center text-gray-500\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline-flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Processing...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), isVoiceMode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-red-600 flex items-center justify-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(Mic, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Recording... Speak now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600 flex items-center justify-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(Bot, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Assistant is typing...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), chatError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-red-600\",\n              children: [\"Error: \", chatError]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/U4a076zmAV+N7+dAZIiPJ9qUvs=\", false, function () {\n  return [useTextToSpeech, useAudioRecorder, useChat];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Mic","MicOff","Send","Volume2","VolumeX","Bot","RotateCcw","MessageList","useChat","useTextToSpeech","useAudioRecorder","jsxDEV","_jsxDEV","App","_s","getTimeGreeting","hour","Date","getHours","messages","setMessages","isMuted","setIsMuted","isTyping","setIsTyping","inputText","setInputText","isStreaming","setIsStreaming","streamingText","setStreamingText","messagesEndRef","speak","stopSpeaking","isSpeaking","startRecording","startAudioRecording","stopRecording","stopAudioRecording","isRecording","isAudioRecording","audioBlob","error","audioError","clearAudio","sendMessage","sendStreamingMessage","getChatHistory","clearChatHistory","resetSession","sessionId","chatHistory","isLoading","chatError","isVoiceMode","isProcessing","_messagesEndRef$curre","current","scrollIntoView","behavior","loadChatHistory","history","length","formattedMessages","map","msg","id","text","sender","timestamp","isVoice","console","handleVoiceToggle","handleMuteToggle","handleResetChat","handleSendMessage","trim","userMessage","now","toString","prev","messageText","chunk","completedSessionId","botMessage","errorMessage","handleSendVoiceMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","onClick","title","ref","disabled","type","value","onChange","e","target","placeholder","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/agmac20/Downloads/voicebot-main/frontend-new/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Mic, MicOff, Send, Volume2, VolumeX, Bot, RotateCcw } from 'lucide-react';\nimport MessageList from './components/MessageList';\nimport useChat from './hooks/useChat';\nimport useTextToSpeech from './hooks/useTextToSpeech';\nimport useAudioRecorder from './hooks/useAudioRecorder';\nimport './index.css';\n\nconst App = () => {\n  // Generate time-appropriate greeting\n  const getTimeGreeting = () => {\n    const hour = new Date().getHours();\n    if (hour < 12) return 'Good morning';\n    if (hour < 17) return 'Good afternoon';\n    return 'Good evening';\n  };\n\n  const [messages, setMessages] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [inputText, setInputText] = useState('');\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [streamingText, setStreamingText] = useState('');\n  \n  const messagesEndRef = useRef(null);\n  \n  const { speak, stopSpeaking, isSpeaking } = useTextToSpeech();\n  const { \n    startRecording: startAudioRecording, \n    stopRecording: stopAudioRecording, \n    isRecording: isAudioRecording, \n    audioBlob, \n    error: audioError,\n    clearAudio \n  } = useAudioRecorder();\n  \n  const { \n    sendMessage, \n    sendStreamingMessage,\n    getChatHistory,\n    clearChatHistory,\n    resetSession,\n    sessionId,\n    chatHistory,\n    isLoading, \n    error: chatError \n  } = useChat();\n\n  // Determine which recording mode we're in\n  const isVoiceMode = isAudioRecording;\n  const isProcessing = isLoading || isStreaming;\n\n  // Scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages, streamingText]);\n\n  // Load chat history when session is available\n  useEffect(() => {\n    if (sessionId) {\n      loadChatHistory();\n    }\n  }, [sessionId]);\n\n  const loadChatHistory = async () => {\n    try {\n      const history = await getChatHistory();\n      if (history && history.length > 0) {\n        const formattedMessages = history.map(msg => ({\n          id: msg.id,\n          text: msg.text,\n          sender: msg.sender,\n          timestamp: new Date(msg.timestamp),\n          isVoice: false\n        }));\n        setMessages(formattedMessages);\n      }\n    } catch (error) {\n      console.error('Failed to load chat history:', error);\n    }\n  };\n\n  const handleVoiceToggle = () => {\n    if (isVoiceMode) {\n      stopAudioRecording();\n    } else {\n      setInputText(''); // Clear input when starting recording\n      startAudioRecording();\n    }\n  };\n\n  const handleMuteToggle = () => {\n    if (isSpeaking) {\n      stopSpeaking();\n    }\n    setIsMuted(!isMuted);\n  };\n\n  const handleResetChat = async () => {\n    try {\n      if (sessionId) {\n        await clearChatHistory();\n      }\n      resetSession();\n      setMessages([\n        {\n          id: 'welcome',\n          text: `Hello! ${getTimeGreeting()}! I'm your AI assistant powered by news and current events. How can I help you today?`,\n          sender: 'bot',\n          timestamp: new Date(),\n          isVoice: false\n        }\n      ]);\n    } catch (error) {\n      console.error('Failed to reset chat:', error);\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputText.trim() || isProcessing) return;\n\n    const userMessage = {\n      id: Date.now().toString(),\n      text: inputText.trim(),\n      sender: 'user',\n      timestamp: new Date(),\n      isVoice: false\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    const messageText = inputText.trim();\n    setInputText('');\n\n    try {\n      setIsTyping(true);\n      setIsStreaming(true);\n      setStreamingText('');\n\n      // Use streaming for better UX\n      await sendStreamingMessage(\n        messageText,\n        // onChunk\n        (chunk) => {\n          setStreamingText(prev => prev + chunk);\n        },\n        // onComplete\n        (completedSessionId) => {\n          const botMessage = {\n            id: (Date.now() + 1).toString(),\n            text: streamingText,\n            sender: 'bot',\n            timestamp: new Date(),\n            isVoice: false\n          };\n          setMessages(prev => [...prev, botMessage]);\n          setStreamingText('');\n          setIsStreaming(false);\n          setIsTyping(false);\n          \n          // Speak the response if not muted\n          if (!isMuted && streamingText) {\n            speak(streamingText);\n          }\n        },\n        // onError\n        (error) => {\n          console.error('Streaming error:', error);\n          const errorMessage = {\n            id: (Date.now() + 1).toString(),\n            text: `Error: ${error}`,\n            sender: 'bot',\n            timestamp: new Date(),\n            isVoice: false\n          };\n          setMessages(prev => [...prev, errorMessage]);\n          setIsStreaming(false);\n          setIsTyping(false);\n          setStreamingText('');\n        }\n      );\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage = {\n        id: (Date.now() + 1).toString(),\n        text: `Error: ${chatError || 'Failed to send message'}`,\n        sender: 'bot',\n        timestamp: new Date(),\n        isVoice: false\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      setIsStreaming(false);\n      setIsTyping(false);\n      setStreamingText('');\n    }\n  };\n\n  // Handle sending voice message when audio is ready\n  useEffect(() => {\n    if (audioBlob && !isAudioRecording) {\n      handleSendVoiceMessage(audioBlob);\n    }\n  }, [audioBlob, isAudioRecording]);\n\n  const handleSendVoiceMessage = async (audioBlob) => {\n    try {\n      // For now, we'll just send a placeholder message\n      // In a real implementation, you'd transcribe the audio first\n      const userMessage = {\n        id: Date.now().toString(),\n        text: 'Voice message (transcription not implemented)',\n        sender: 'user',\n        timestamp: new Date(),\n        isVoice: true\n      };\n\n      setMessages(prev => [...prev, userMessage]);\n      clearAudio();\n      \n      // Send a text message instead\n      await handleSendMessage();\n    } catch (error) {\n      console.error('Error sending voice message:', error);\n      clearAudio();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-4xl\">\n        {/* Header */}\n        <div className=\"bg-white rounded-t-2xl shadow-lg p-6 border-b\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\n                <Bot className=\"w-6 h-6 text-white\" />\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-800\">AI News Assistant</h1>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\n                  <span className=\"text-sm text-gray-600\">\n                    {sessionId ? `Session: ${sessionId.slice(0, 8)}...` : 'Ready'}\n                  </span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={handleResetChat}\n                className=\"p-2 rounded-full bg-gray-100 text-gray-600 hover:bg-gray-200 transition-colors\"\n                title=\"Reset Chat\"\n              >\n                <RotateCcw className=\"w-5 h-5\" />\n              </button>\n              <button\n                onClick={handleMuteToggle}\n                className={`p-2 rounded-full transition-colors ${\n                  isMuted ? 'bg-red-100 text-red-600' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                }`}\n                title={isMuted ? 'Unmute' : 'Mute'}\n              >\n                {isMuted ? <VolumeX className=\"w-5 h-5\" /> : <Volume2 className=\"w-5 h-5\" />}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Chat Container */}\n        <div className=\"bg-white rounded-b-2xl shadow-lg h-96 flex flex-col\">\n          {/* Messages */}\n          <div className=\"flex-1 overflow-y-auto p-6\">\n            <MessageList \n              messages={messages} \n              isTyping={isTyping}\n              streamingText={streamingText}\n              isStreaming={isStreaming}\n            />\n            <div ref={messagesEndRef} />\n          </div>\n\n          {/* Input Area */}\n          <div className=\"border-t p-6\">\n            <div className=\"flex items-center space-x-4\">\n              {/* Voice Recording Button */}\n              <button\n                onClick={handleVoiceToggle}\n                className={`p-4 rounded-full transition-all duration-200 ${\n                  isVoiceMode \n                    ? 'bg-red-500 text-white animate-pulse shadow-lg' \n                    : 'bg-blue-500 text-white hover:bg-blue-600 shadow-md'\n                }`}\n                disabled={isProcessing}\n                title=\"Voice Recording\"\n              >\n                {isVoiceMode ? <MicOff className=\"w-6 h-6\" /> : <Mic className=\"w-6 h-6\" />}\n              </button>\n\n              {/* Text Input */}\n              <div className=\"flex-1\">\n                <input\n                  type=\"text\"\n                  value={inputText}\n                  onChange={(e) => setInputText(e.target.value)}\n                  placeholder={\n                    isVoiceMode ? \"Recording... Click mic to stop\" :\n                    isProcessing ? \"Processing...\" :\n                    \"Ask me about current news and events...\"\n                  }\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter' && !isProcessing) {\n                      handleSendMessage();\n                    }\n                  }}\n                  disabled={isVoiceMode || isProcessing}\n                />\n              </div>\n\n              {/* Send Button */}\n              <button\n                className={`p-3 rounded-full transition-colors disabled:opacity-50 ${\n                  isVoiceMode \n                    ? 'bg-red-500 text-white hover:bg-red-600' \n                    : 'bg-blue-500 text-white hover:bg-blue-600'\n                }`}\n                disabled={!inputText.trim() || isProcessing}\n                onClick={handleSendMessage}\n                title=\"Send message\"\n              >\n                <Send className=\"w-5 h-5\" />\n              </button>\n            </div>\n            \n            {/* Loading indicator */}\n            {isProcessing && (\n              <div className=\"mt-4 text-center text-gray-500\">\n                <div className=\"inline-flex items-center space-x-2\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-500\"></div>\n                  <span>Processing...</span>\n                </div>\n              </div>\n            )}\n\n            {/* Status Messages */}\n            {isVoiceMode && (\n              <div className=\"mt-3 text-center\">\n                <p className=\"text-sm text-red-600 flex items-center justify-center space-x-2\">\n                  <Mic className=\"w-4 h-4\" />\n                  <span>Recording... Speak now</span>\n                </p>\n              </div>\n            )}\n            \n            {isTyping && (\n              <div className=\"mt-3 text-center\">\n                <p className=\"text-sm text-gray-600 flex items-center justify-center space-x-2\">\n                  <Bot className=\"w-4 h-4\" />\n                  <span>Assistant is typing...</span>\n                </p>\n              </div>\n            )}\n\n            {/* Error Messages */}\n            {chatError && (\n              <div className=\"mt-3 text-center\">\n                <p className=\"text-sm text-red-600\">\n                  Error: {chatError}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}