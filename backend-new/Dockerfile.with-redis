# Dockerfile with Backend + Redis (Redis starts first, then app)
FROM node:20-alpine

# Install Redis and other dependencies
RUN apk add --no-cache \
    redis \
    dumb-init \
    bash \
    supervisor

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Clean npm cache and install dependencies
RUN npm cache clean --force && \
    npm install --production --no-optional --no-audit --no-fund

# Copy source code
COPY src/ ./src/

# Create public directory for static files
RUN mkdir -p public

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Change ownership of the app directory
RUN chown -R nodejs:nodejs /app

# Set default environment variables for production
ENV NODE_ENV=production
ENV PORT=3001
ENV REDIS_HOST=localhost
ENV REDIS_PORT=6379
ENV REDIS_DB=0
ENV REDIS_URL=redis://localhost:6379/0
ENV PINECONE_ENVIRONMENT=us-east-1-aws
ENV PINECONE_INDEX_NAME=voicebot-index
ENV PINECONE_DIMENSION=1024
ENV GEMINI_MODEL=gemini-1.5-flash
ENV GEMINI_MAX_TOKENS=1000
ENV GEMINI_TEMPERATURE=0.7
ENV RAG_TOP_K=5
ENV RAG_CHUNK_SIZE=1000
ENV RAG_CHUNK_OVERLAP=200
ENV SESSION_TTL=3600
ENV SESSION_MAX_MESSAGES=100
ENV NEWS_MAX_ARTICLES=50
ENV NEWS_UPDATE_INTERVAL=3600000

# Create supervisor configuration
RUN mkdir -p /etc/supervisor/conf.d
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Expose ports
EXPOSE 3001 6379

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start Redis first, then the application
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
